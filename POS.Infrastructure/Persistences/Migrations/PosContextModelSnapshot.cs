// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Infrastructure.Persistences.Contexts;

#nullable disable

namespace POS.Infrastructure.Persistences.Migrations
{
    [DbContext(typeof(PosContext))]
    partial class PosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POS.Domain.Entities.BranchOffice", b =>
                {
                    b.Property<int>("BranchOfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchOfficeId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("BranchOfficeId")
                        .HasName("PK__BranchOf__27247FF9AFD4029D");

                    b.HasIndex("BusinessId");

                    b.HasIndex("DistrictId");

                    b.ToTable("BranchOffices");
                });

            modelBuilder.Entity("POS.Domain.Entities.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Mision")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Vision")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("BusinessId")
                        .HasName("PK__Business__F1EAA36E43C55705");

                    b.HasIndex("DistrictId");

                    b.ToTable("Business", (string)null);
                });

            modelBuilder.Entity("POS.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Categori__19093A0BD10B69EE");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("POS.Domain.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ClientId")
                        .HasName("PK__Clients__E67E1A242B1383CE");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("POS.Domain.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BEDDC4C2BEA");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("POS.Domain.Entities.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("DistrictId")
                        .HasName("PK__District__85FDA4C606F47DE5");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("POS.Domain.Entities.DocumentType", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentTypeId"));

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.HasKey("DocumentTypeId")
                        .HasName("PK__Document__DBA390E1706A9C46");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("POS.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<int?>("FatherId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("URL");

                    b.HasKey("MenuId")
                        .HasName("PK__Menus__C99ED230C8098F30");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("POS.Domain.Entities.MenuRole", b =>
                {
                    b.Property<int>("MenuRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuRolId"));

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.HasKey("MenuRolId")
                        .HasName("PK__MenuRole__6640AD0C9151FDC0");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRoles");
                });

            modelBuilder.Entity("POS.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6CDE0B0AAE1");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("POS.Domain.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProviderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Provider__B54C687DA1314900");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("POS.Domain.Entities.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ProvinceId")
                        .HasName("PK__Province__FD0A6F83158EFCF8");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("POS.Domain.Entities.Purcharse", b =>
                {
                    b.Property<int>("PurcharseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurcharseId"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurcharseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PurcharseId")
                        .HasName("PK__Purchars__A98C674B6C884DE6");

                    b.HasIndex("ProviderId");

                    b.HasIndex("UserId");

                    b.ToTable("Purcharses");
                });

            modelBuilder.Entity("POS.Domain.Entities.PurcharseDetail", b =>
                {
                    b.Property<int>("PurcharseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurcharseDetailId"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurcharseId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PurcharseDetailId")
                        .HasName("PK__Purchars__7353248BA65F057B");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurcharseId");

                    b.ToTable("PurcharseDetails");
                });

            modelBuilder.Entity("POS.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1AB26511B3");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("POS.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SaleId")
                        .HasName("PK__Sales__1EE3C3FF189AA26E");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("POS.Domain.Entities.SaleDetail", b =>
                {
                    b.Property<int>("SaleDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleDetailId"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("SaleDetailId")
                        .HasName("PK__SaleDeta__70DB14FE32D7198B");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleDetails");
                });

            modelBuilder.Entity("POS.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("AuthType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Users__19093A0BD10B69EE");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("POS.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int?>("BranchOfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A35FE4D756B");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("POS.Domain.Entities.UsersBranchOffice", b =>
                {
                    b.Property<int>("UserBranchOfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserBranchOfficeId"));

                    b.Property<int?>("BranchOfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserBranchOfficeId")
                        .HasName("PK__UsersBra__7D1E804A51C934BA");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersBranchOffices");
                });

            modelBuilder.Entity("POS.Domain.Entities.BranchOffice", b =>
                {
                    b.HasOne("POS.Domain.Entities.Business", "Business")
                        .WithMany("BranchOffices")
                        .HasForeignKey("BusinessId")
                        .IsRequired()
                        .HasConstraintName("FK__BranchOff__Busin__48CFD27E");

                    b.HasOne("POS.Domain.Entities.District", "District")
                        .WithMany("BranchOffices")
                        .HasForeignKey("DistrictId")
                        .IsRequired()
                        .HasConstraintName("FK__BranchOff__Distr__49C3F6B7");

                    b.Navigation("Business");

                    b.Navigation("District");
                });

            modelBuilder.Entity("POS.Domain.Entities.Business", b =>
                {
                    b.HasOne("POS.Domain.Entities.District", "District")
                        .WithMany("Businesses")
                        .HasForeignKey("DistrictId")
                        .IsRequired()
                        .HasConstraintName("FK__Business__Distri__4AB81AF0");

                    b.Navigation("District");
                });

            modelBuilder.Entity("POS.Domain.Entities.Client", b =>
                {
                    b.HasOne("POS.Domain.Entities.DocumentType", "DocumentType")
                        .WithMany("Clients")
                        .HasForeignKey("DocumentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Clients__Documen__4BAC3F29");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("POS.Domain.Entities.District", b =>
                {
                    b.HasOne("POS.Domain.Entities.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .IsRequired()
                        .HasConstraintName("FK_Districts_Provinces");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("POS.Domain.Entities.MenuRole", b =>
                {
                    b.HasOne("POS.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_MenuRoles_Menu");

                    b.HasOne("POS.Domain.Entities.Role", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_MenuRoles_Roles");

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("POS.Domain.Entities.Product", b =>
                {
                    b.HasOne("POS.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__4F7CD00D");

                    b.HasOne("POS.Domain.Entities.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Provid__5070F446");

                    b.Navigation("Category");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("POS.Domain.Entities.Provider", b =>
                {
                    b.HasOne("POS.Domain.Entities.DocumentType", "DocumentType")
                        .WithMany("Providers")
                        .HasForeignKey("DocumentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Providers__Docum__5165187F");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("POS.Domain.Entities.Province", b =>
                {
                    b.HasOne("POS.Domain.Entities.Department", "Department")
                        .WithMany("Provinces")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Provinces__Depar__52593CB8");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("POS.Domain.Entities.Purcharse", b =>
                {
                    b.HasOne("POS.Domain.Entities.Provider", "Provider")
                        .WithMany("Purcharses")
                        .HasForeignKey("ProviderId")
                        .HasConstraintName("FK__Purcharse__Provi__5535A963");

                    b.HasOne("POS.Domain.Entities.User", "User")
                        .WithMany("Purcharses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Purcharse__UserI__5629CD9C");

                    b.Navigation("Provider");

                    b.Navigation("User");
                });

            modelBuilder.Entity("POS.Domain.Entities.PurcharseDetail", b =>
                {
                    b.HasOne("POS.Domain.Entities.Product", "Product")
                        .WithMany("PurcharseDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Purcharse__Produ__534D60F1");

                    b.HasOne("POS.Domain.Entities.Purcharse", "Purcharse")
                        .WithMany("PurcharseDetails")
                        .HasForeignKey("PurcharseId")
                        .HasConstraintName("FK__Purcharse__Purch__5441852A");

                    b.Navigation("Product");

                    b.Navigation("Purcharse");
                });

            modelBuilder.Entity("POS.Domain.Entities.Sale", b =>
                {
                    b.HasOne("POS.Domain.Entities.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Sales__ClientId__59063A47");

                    b.HasOne("POS.Domain.Entities.User", "User")
                        .WithMany("Sales")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Sales__UserId__59FA5E80");

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("POS.Domain.Entities.SaleDetail", b =>
                {
                    b.HasOne("POS.Domain.Entities.Product", "Product")
                        .WithMany("SaleDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__SaleDetai__Produ__571DF1D5");

                    b.HasOne("POS.Domain.Entities.Sale", "Sale")
                        .WithMany("SaleDetails")
                        .HasForeignKey("SaleId")
                        .HasConstraintName("FK__SaleDetai__SaleI__5812160E");

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("POS.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("POS.Domain.Entities.BranchOffice", "BranchOffice")
                        .WithMany("UserRoles")
                        .HasForeignKey("BranchOfficeId")
                        .HasConstraintName("FK__UserRoles__Branc__5AEE82B9");

                    b.HasOne("POS.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__5BE2A6F2");

                    b.HasOne("POS.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__UserI__5CD6CB2B");

                    b.Navigation("BranchOffice");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("POS.Domain.Entities.UsersBranchOffice", b =>
                {
                    b.HasOne("POS.Domain.Entities.BranchOffice", "BranchOffice")
                        .WithMany("UsersBranchOffices")
                        .HasForeignKey("BranchOfficeId")
                        .HasConstraintName("FK__UsersBran__Branc__5DCAEF64");

                    b.HasOne("POS.Domain.Entities.User", "User")
                        .WithMany("UsersBranchOffices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UsersBran__UserI__5EBF139D");

                    b.Navigation("BranchOffice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("POS.Domain.Entities.BranchOffice", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("UsersBranchOffices");
                });

            modelBuilder.Entity("POS.Domain.Entities.Business", b =>
                {
                    b.Navigation("BranchOffices");
                });

            modelBuilder.Entity("POS.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("POS.Domain.Entities.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("POS.Domain.Entities.Department", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("POS.Domain.Entities.District", b =>
                {
                    b.Navigation("BranchOffices");

                    b.Navigation("Businesses");
                });

            modelBuilder.Entity("POS.Domain.Entities.DocumentType", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Providers");
                });

            modelBuilder.Entity("POS.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("POS.Domain.Entities.Product", b =>
                {
                    b.Navigation("PurcharseDetails");

                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("POS.Domain.Entities.Provider", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Purcharses");
                });

            modelBuilder.Entity("POS.Domain.Entities.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("POS.Domain.Entities.Purcharse", b =>
                {
                    b.Navigation("PurcharseDetails");
                });

            modelBuilder.Entity("POS.Domain.Entities.Role", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("POS.Domain.Entities.Sale", b =>
                {
                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("POS.Domain.Entities.User", b =>
                {
                    b.Navigation("Purcharses");

                    b.Navigation("Sales");

                    b.Navigation("UserRoles");

                    b.Navigation("UsersBranchOffices");
                });
#pragma warning restore 612, 618
        }
    }
}
